<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Url on Virtualbeck&#39;s Blog</title>
    <link>https://blog.virtualbeck.com/tags/url/</link>
    <description>Recent content in Url on Virtualbeck&#39;s Blog</description>
    <image>
      <title>Virtualbeck&#39;s Blog</title>
      <url>https://blog.virtualbeck.com/static/mike.webp</url>
      <link>https://blog.virtualbeck.com/static/mike.webp</link>
    </image>
    <generator>Hugo -- 0.143.0</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.virtualbeck.com/tags/url/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>tinysite</title>
      <link>https://blog.virtualbeck.com/posts/tinysite/</link>
      <pubDate>Thu, 24 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.virtualbeck.com/posts/tinysite/</guid>
      <description>&lt;p&gt;Copy and paste this into a browser url. It is an entire (2 page) static site. That&amp;rsquo;s it!&lt;/p&gt;
&lt;p&gt;Also, if you&amp;rsquo;d like to decode it first to make sure I&amp;rsquo;m not doing something shady, paste the data (everything after the comma) &lt;a href=&#34;https://www.base64decode.org/&#34;&gt;to this website&lt;/a&gt;. You&amp;rsquo;ll see the html document.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;data:text/html;base64,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
